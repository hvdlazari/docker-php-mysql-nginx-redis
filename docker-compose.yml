version: '3'

services:

# PHP Service
  app:
    build:
      context: ${PATH_WORSPACE}
      dockerfile: ./docker/${PHP_VERSION}/Dockerfile
    environment:
      SERVICE_NAME: ${APP_NAME}
      SERVICE_TAGS: ${SERVICE_TAGS}
    container_name: ${APP_NAME}-app
    restart: unless-stopped
    tty: true
    working_dir: /var/www
    volumes:
      - ${PATH_WORSPACE}:/var/www
      - ${PATH_WORSPACE}/docker/php/php.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - my-network

# Nginx Service
  webserver:
    image: nginx:alpine
    container_name: ${WEBSERVER_NAME}-web
    restart: unless-stopped
    tty: true
    extra_hosts:
      - "<virtual_host_name>:127.0.0.1"
      hostname: <virtual_host_name>
      domainname: <virtual_host_domain>
    ports:
      - "80:80"
    volumes:
      - ${PATH_WORSPACE}:/var/www
      - ${PATH_WORSPACE}/docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - my-network

#  MySQL Service
  db:
    image: mysql:5.7.22
    container_name: ${DB_NAME}-db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      SERVICE_NAME: ${DB_NAME}-mysql
      SERVICE_TAGS: ${SERVICE_TAGS}
    volumes:
      - ${PATH_WORSPACE}/data/dbdata:/var/lib/mysql/
      - ${PATH_WORSPACE}/docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - my-network

# Redis
  redis:
    image: redis:alpine
    container_name: ${REDIS_NAME}-rds
    command: redis-server --appendonly yes
    restart: unless-stopped
    tty: true
    volumes:
      - ${PATH_WORSPACE}/data/redis:/data
      - ${PATH_WORSPACE}/docker/redis/redis.conf:/root/data/.redis-server/redis.conf
    ports:
      - "6379:6379"
    networks:
      - my-network

# Docker Networks
networks:
  my-network:
    driver: bridge

# Volumes
volumes:
  dbdata:
    driver: local
